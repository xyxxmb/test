<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-4.1.xsd">

    <mvc:annotation-driven/>
    <!-- task任务扫描注解 -->
    <task:annotation-driven/>

    <!--注释部分-->
    <!-- 静态资源 -->
    <!-- <mvc:default-servlet-handler/>
    <mvc:resources location="/WEB-INF/app/"  mapping="/app/**" /> -->
    
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>-->
     
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
   		<property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>
    
    <bean id="stringConverter"  
        class="org.springframework.http.converter.StringHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value>  
            </list>
        </property>
    </bean>
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->    
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
<!--             	<ref bean="jsonConverter" /> -->
<!--             	<ref bean="stringConverter" /> -->
                 <ref bean="mappingJacksonHttpMessageConverter" />
            </list>  
        </property>  
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>
<!--             	<ref bean="jsonConverter" /> -->
<!--             	<ref bean="stringConverter" /> -->
                 <ref bean="mappingJacksonHttpMessageConverter" />
            </list>  
        </property>  
    </bean>
    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <!--  <context:component-scan base-package="com.buptyouth.controller"> -->
    <context:component-scan base-package="com.buptyouth">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     
        <!-- 默认编码 -->  
         <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
         <property name="maxUploadSize" value="10485760000" />     
        <!-- 内存中的最大值 -->  
         <property name="maxInMemorySize" value="40960" />    
    </bean> 
    
</beans>  