<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 数据库连接引入配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
	
	<!-- 数据源配置，采用DBCP连接池，应预先把DBCP的jar包复制到工程的lib目录下。 -->
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg>
        <bean class="com.zaxxer.hikari.HikariConfig">
        	<property name="driverClassName" value="${hikaricp.jdbc.driverClassName}"/>
            <property name="jdbcUrl" value="${hikaricp.url}"/>
            <property name="username" value="${hikaricp.username}"/>
            <property name="password" value="${hikaricp.password}"/>
            <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
            <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
            <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
            <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
            <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
            <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>
            <property name="autoCommit" value="false" />
		</bean>
		</constructor-arg>
	</bean>
    <bean id="hikari2DataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="${hikaricp2.jdbc.driverClassName}"/>
                <property name="jdbcUrl" value="${hikaricp2.url}"/>
                <property name="username" value="${hikaricp2.username}"/>
                <property name="password" value="${hikaricp2.password}"/>
                <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
                <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
                <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
                <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
                <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
                <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>
                <property name="autoCommit" value="false" />
            </bean>
        </constructor-arg>
    </bean>
    <!--配置切换数据库自定义类-->
    <bean id="multipleDataSource" class="com.buptyouth.mybatis.util.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="hikariDataSource"></property>
        <property name="targetDataSources">
            <map>
                <entry key="hikariDataSource" value-ref="hikariDataSource"></entry>
                <entry key="hikari2DataSource" value-ref="hikari2DataSource"></entry>
            </map>
        </property>
    </bean>


        <!-- Mybatis配置  -->
    <!-- 数据库连接池配置  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<!--dataSource属性指定要用到的连接池--> 
		<property name="dataSource" ref="multipleDataSource"/>
		<!-- 所有配置的mapper文件 -->
    	<property name="mapperLocations" value="classpath:com/buptyouth/mybatis/xmlmapper/*.xml" />
	</bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       	<property name="basePackage" value="com.buptyouth.mybatis.dao" />  
       	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>   
	</bean>
	
    <!-- 声明式事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="multipleDataSource" />
    </bean>

    <!--注释部分-->
    <!-- 使用annotation注解方式配置事务 -->
	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
</beans>